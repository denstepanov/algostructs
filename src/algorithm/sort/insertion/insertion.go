package insertion

import "github.com/denstepanov/algostructs/src/util"

/*
 * Сортировка вставками
 *
 * Сортировка состоит из двух массивов: первый - отвечает за размер подмассива,
 * второй - пробегает подмассив в обратном порядке и размещает последний элемент подмассива в подходящее место.
 * Как работает вложенный цикл:
 * 1. Берёт последний элемент подмассива,
 * 2. Проводит две проверки над ним: если больше нуля И меньше предыдущего элемента, тогда меняем текущий и предыдущий элемент местами
 * 3. В ином случае сбрасывает вложенный цикл, тем самым "говоря" что текущий элемент находится на своём месте.
 *
 * // Лучший случай O(n)
 * // Средний случай O(n^2)
 * // Худший случай O(n^2)
 */
func Sort(s []int) {
	if len(s) < 2 {
		return
	}

	lastIndex := len(s) - 1
	// Двигаю разделитель с начала и до конца, сортируя элементы левой части после каждого перемещения разделителя.
	for divider := 0; divider <= lastIndex; divider++ {
		// Цикл отвечает что каждое новое значение левого подмассива будет находиться в своём месте.
		// Для этого в качестве стартовой позиции указываем current == divider, затем уменьшаем значение current, пока оно не станет равно нулю.
		// Т.е. пробегаем левый массив в обратном порядке, меняя элементы местами, если предыдущий элемент больше текущего.
		for current := divider; current > 0; current-- {
			if s[current] < s[current-1] {
				util.Swap(s, current, current-1)
			}
		}
	}
}
